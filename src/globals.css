@import "tailwindcss";

/* ========== 颜色变量（浅色默认） ========== */
:root {
  --bg: #fcf9f8;
  --text: #111827;
  --muted: #6b7280;
  --border: #f3ede9;

  --accent: #f88a4f;           /* dusty rose */
  --accent-50: #fdf6f6;        /* very light rose */
  --accent-600: #de5e17;       /* medium dusty rose */
  --accent-800: #8e3f15;       /* darker rose */

  --secondary: #a9c5d1;
  --secondary-50: #f2f6f7;        /* very light rose */
  --secondary-600: #56899f;       /* medium dusty rose */
  --secondary-800: #3b5a68;       /* darker rose */

  --card-bg: #ffffff;
  --shadow-soft: 0 2px 12px rgba(212, 165, 165, 0.12);
}

/* 可选：深色主题（给 <html> 或 <body> 加 .theme-dark 即可切换） */
.theme-dark {
  --bg: #0a0a0a;
  --text: #f3f4f6;
  --muted: #9ca3af;
  --border: #1f2937;

  --accent: #60a5fa;          /* blue-400 */
  --accent-50: rgba(59,130,246,0.1);
  --accent-600: #60a5fa;
  --accent-800: #93c5fd;

  --card-bg: #0f1115;
  --shadow-soft: 0 2px 12px rgba(0,0,0,0.35);
}

/* 全局应用 */
html, body {
  margin: 0;
  padding: 0;
  background: var(--bg);
  color: var(--text);
  font-family: "Montserrat", sans-serif;
}

/* ========== 抽象出来的组件样式 ========== */
@layer utilities {
  /* 版块容器 */
  .section {
    @apply min-h-screen flex items-center justify-center;
    background: var(--bg);
    color: var(--text);
  }
  .section-home {
    @apply py-30 pb-0; /* 根据内容自适应高度 */
    background: var(--bg);
    color: var(--text);
  }

  .section-pad {
    @apply py-20;
  }

  .container-narrow {
    @apply max-w-3xl mx-auto px-4;
  }

  .container-wide {
    @apply max-w-5xl mx-auto px-4;
  }

  /* 标题渐变 */
  .section-title {
    @apply text-2xl md:text-4xl font-bold mb-8 text-center;
    background-image: linear-gradient(90deg, var(--accent-600), var(--accent));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

    .section-title-black {
    @apply text-2xl md:text-4xl font-bold mb-8 text-center;
    -webkit-background-clip: text;
    background-clip: text;
    color: black;
  }

    /* 标题渐变 */
  .hero-title {
    @apply text-5xl md:text-7xl font-bold mb-8 text-center;
    background-image: linear-gradient(90deg, var(--accent-800), var(--accent));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  /* 文本（次要说明） */
  .muted {
    color: var(--muted);
  }

  /* 卡片 */
  .card {
    background: var(--card-bg);
    border: 1px solid var(--border);
    @apply rounded-xl p-6 transition;
  }
  .card-lg { @apply p-8; }
  .card-hover:hover { transform: translateY(-4px); box-shadow: var(--shadow-soft); }
  .card-border-hover:hover { border-color: var(--accent-600); }

  /* 技术标签 */
  .tag {
    @apply rounded-full text-sm py-1 px-3 transition;
    background: var(--accent-50);
    color: var(--accent-600);
  }
  .tag:hover { background: color-mix(in srgb, var(--accent-50) 70%, white 0%); }

  /* 链接 */
  .link-primary {
    color: var(--accent-600);
    @apply transition-colors;
  }
  .link-primary:hover { color: var(--accent-800); }
     /* 按钮基类 */
  .btn {
  @apply rounded font-medium py-3 px-6 transition;
  }

 /* 主按钮 */
.btn-primary {
  @apply rounded font-medium py-3 px-6 transition text-white;
  background: var(--accent);
}
.btn-primary:hover {
  @apply -translate-y-0.5 shadow-lg;
  box-shadow: 0 0 15px color-mix(in srgb, var(--accent) 60%, transparent);
}

/* 次按钮 */
.btn-secondary {
  @apply rounded font-medium py-3 px-6 transition bg-transparent;
  border: 1px solid var(--accent-600);
  color: var(--accent-600);
}
.btn-secondary:hover {
  @apply -translate-y-0.5;
  background: var(--accent-50);
  box-shadow: 0 0 15px color-mix(in srgb, var(--accent) 40%, transparent);
}


}


/* ===== Flower Loader ===== */
.flower {
  --size: 64px;              /* 组件整体尺寸 */
  --petals: 12;              /* 花瓣数量 */
  --radius: 26px;            /* 花瓣环半径 */
  --petal: 10px;             /* 花瓣直径 */
  --color: var(--accent);    /* 颜色取全局主题主色 */
  --bgc: var(--bg);

  position: relative;
  width: var(--size);
  height: var(--size);
  display: inline-block;
  filter: drop-shadow(0 2px 8px rgba(0,0,0,.12));
}

/* 中心圆点 */
.flower__center {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--petal) + 4px);
  height: calc(var(--petal) + 4px);
  transform: translate(-50%, -50%);
  background: var(--bgc);
  border: 2px solid var(--color);
  border-radius: 50%;
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--color) 25%, transparent);
}

/* 单个花瓣（一个小圆点） */
.flower__petal {
  position: absolute;
  top: 50%;
  left: 50%;
  width: var(--petal);
  height: var(--petal);
  border-radius: 50%;
  background: var(--color);
  transform-origin: center;
  /* 通过索引变量 --i 均匀分布在圆环上 */
  transform:
    rotate(calc(var(--i) * (360deg / var(--petals))))
    translateY(calc(-1 * var(--radius)));
  /* 轻微呼吸动画，形成花朵绽放感 */
  animation: petalPulse 1.2s ease-in-out infinite;
  animation-delay: calc(var(--i) * 0.06s);
  opacity: .35;
  box-shadow: 0 0 10px color-mix(in srgb, var(--color) 60%, transparent);
}


/* 花朵整体旋转一点点，增强动感（可选） */
.flower--spin {
  animation: flowerSpin 6s linear infinite;
}


/* ========= 动画 utilities ========= */

@layer utilities {
  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  .animate-blink {
    animation: blink 0.8s step-end infinite;
  }

  @keyframes loading {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(250%);
    }
  }

  .animate-loading-bar {
    animation: loading 0.8s ease infinite;
  }

  @keyframes petalPulse {
  0%   { transform: rotate(calc(var(--i) * (360deg / var(--petals)))) translateY(calc(-1 * var(--radius))) scale(.9); opacity: .3; }
  50%  { transform: rotate(calc(var(--i) * (360deg / var(--petals)))) translateY(calc(-1 * var(--radius))) scale(1.2); opacity: .9; }
  100% { transform: rotate(calc(var(--i) * (360deg / var(--petals)))) translateY(calc(-1 * var(--radius))) scale(.9); opacity: .3; }
}


  @keyframes flowerSpin {
  to { transform: rotate(360deg); }
  }


  /* 结束时淡出（可选） */
  @keyframes fadeOut {
  to { opacity: 0; visibility: hidden; }
  }
.fade-out { animation: fadeOut .6s ease forwards; }
}
/* ========= Reveal 动画 ========= */
.reveal {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.7s ease, transform 0.7s ease;
}
.reveal.visible {
  opacity: 1;
  transform: translateY(0);
}